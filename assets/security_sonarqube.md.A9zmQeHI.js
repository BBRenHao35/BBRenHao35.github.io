import{_ as s,o as i,c as a,R as n}from"./chunks/framework.UjU5Kp2a.js";const e="/assets/sonarqube.0-j9izqb.png",u=JSON.parse('{"title":"Sonarqube","description":"","frontmatter":{},"headers":[],"relativePath":"security/sonarqube.md","filePath":"security/sonarqube.md","lastUpdated":1741354156000}'),l={name:"security/sonarqube.md"},t=n(`<h1 id="sonarqube" tabindex="-1">Sonarqube <a class="header-anchor" href="#sonarqube" aria-label="Permalink to &quot;Sonarqube&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">建立時間：2025/03/07</p><ul><li>開源程式碼品質、分析工具</li><li>靜態程式分析(SAST): 掃描Souce Code</li></ul></div><h2 id="sonarqube-docker-compoes" tabindex="-1">📌 Sonarqube Docker Compoes <a class="header-anchor" href="#sonarqube-docker-compoes" aria-label="Permalink to &quot;:pushpin: Sonarqube Docker Compoes&quot;">​</a></h2><ul><li>建立 ../sonarqube/docker-compose.yaml</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sonarqube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sonarqube:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sonarqube</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9000:9000&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # - SONARQUBE_JDBC_URL=jdbc:postgresql://{IP or docker service name}:{PostgreSqlPort}/sonar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # DB Source</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SONARQUBE_JDBC_USERNAME=sa</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # DB UserName</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SONARQUBE_JDBC_PASSWORD=000000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # DB Password</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./sonarqube_data:/opt/sonarqube/data:rw&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 儲存 SonarQube 資料(分析結果)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./sonarqube_logs:/opt/sonarqube/logs:rw&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # logs 資料</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./sonarqube_extensions:/opt/sonarqube/extensions:rw&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # SonarQube 如果有安裝額外的插件功能，會存放在這</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker_networks</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 表示postgres服務要加入docker_networks網路</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  docker_networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    external</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 如果少了這一行，他會嘗試建立 docker_networks，但如果網路已存在會出錯，所以先建立網路，在加上這一行。</span></span></code></pre></div><h2 id="pull-image、run-service" tabindex="-1">📌 Pull Image、Run Service <a class="header-anchor" href="#pull-image、run-service" aria-label="Permalink to &quot;:pushpin: Pull Image、Run Service&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 執行 redis.yaml 內的設定</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 啟動服務</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 查看 Container</span></span></code></pre></div><ul><li><code>http://localhost:9090</code> (Login: <code>admin</code> / <code>admin</code>) <img src="`+e+'" alt="pgadmin"></li></ul>',8),p=[t];function h(k,r,o,d,E,c){return i(),a("div",null,p)}const y=s(l,[["render",h]]);export{u as __pageData,y as default};
