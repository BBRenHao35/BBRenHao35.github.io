import{_ as s,o as i,c as a,R as n}from"./chunks/framework.UjU5Kp2a.js";const e="/assets/wsl_integration.S2kt2mBi.png",t="/assets/networks.0CUiUyrO.png",y=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[],"relativePath":"post/docker.md","filePath":"post/docker.md","lastUpdated":1741284293000}'),l={name:"post/docker.md"},k=n(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">建立時間：2023/12/12</p><p>Docker</p></div><h2 id="docker-常用指令" tabindex="-1">📌 Docker 常用指令 <a class="header-anchor" href="#docker-常用指令" aria-label="Permalink to &quot;:pushpin: Docker 常用指令&quot;">​</a></h2><ul><li>Docker Image 操作</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看 Images</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> images</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prune</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 刪除沒有在使用的 Images</span></span></code></pre></div><ul><li>Docker Container 操作</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id={Container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name={Container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Name}</span></span></code></pre></div><ul><li>Docker Container 操作</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {Container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kill</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {Container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 強制停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {Container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 刪除停止 Container</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {Container</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 重啟 Container</span></span></code></pre></div><h2 id="wsl-integration-共用-linux-核心" tabindex="-1">📌 WSL integration 共用 Linux 核心 <a class="header-anchor" href="#wsl-integration-共用-linux-核心" aria-label="Permalink to &quot;:pushpin: WSL integration 共用 Linux 核心&quot;">​</a></h2><ul><li>Enable integration with additional distros 設定</li><li>設定可以共用同一個Linux核心。架設我 wsl2 有兩個環境 windows docker-desktop 以及 Linux Ubuntu。那就算我在 Linux Ubuntu 建立一個 docker 服務，我在 docker-desktop 也可以存取查看該服務。</li></ul><p><img src="`+e+`" alt="wsl_integration"></p><h2 id="查看-docker-內所有網路" tabindex="-1">📌 查看 docker 內所有網路 <a class="header-anchor" href="#查看-docker-內所有網路" aria-label="Permalink to &quot;:pushpin: 查看 docker 內所有網路&quot;">​</a></h2><ul><li>bridge、host、none 無法刪除，所以如果要 docker 內部服務互通，可以建立一個網路，讓所有 docker 服務連同一個網路 (例如: docker_networks)</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> networks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看 docker 內所有網路</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> networks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {name}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 建立新網路</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inspect</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker_networks</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看網路詳細資訊，同時也可以看到該網路底下所有 docker 服務的 IP</span></span></code></pre></div><p><img src="`+t+'" alt="networks"></p>',16),h=[k];function p(r,d,o,c,F,g){return i(),a("div",null,h)}const u=s(l,[["render",p]]);export{y as __pageData,u as default};
